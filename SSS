local WeatherAPI = "https://api.open-meteo.com/v1/forecast"
local Params = {
	latitude = nil,
	longitude = nil,
	hourly = "temperature_2m",
	current = {"precipitation", "rain", "showers", "snowfall", "weather_code", "cloud_cover"}
}

local ServerApi = "https://ipconfig.io/json"

local TimeApi = "https://timeapi.io/api/time/current/ip?ipAddress="

local WeatherModule = require(script.WeatherHandler)
local WeatherCodes = require(script.WeatherCodes)

local ParamsSetUp = "?"

local Ip

local HttpService = game:GetService("HttpService")
local LightingService = game:GetService("Lighting")
local PlayerService = game:GetService("Players")
local RunService = game:GetService("RunService")

local function ApiRequest(Api)
	task.wait(1)
	local Data
	
	local Success, Error = pcall(function()
		Data = HttpService:GetAsync(Api)
	end)
	
	if Success then
		return Data
	end
end

local function CurrentWeather()
	task.wait(1)
	if #ParamsSetUp == 1 then
		for key, value in pairs(Params) do
			if type(value) == "table" then
				value = table.concat(value, ",") -- Convert list to comma-separated string
			end
			ParamsSetUp = ParamsSetUp .. key .. "=" .. tostring(value) .. "&"
		end
		ParamsSetUp = ParamsSetUp:sub(1, -2)
	end
	
	local Weather = HttpService:JSONDecode(ApiRequest(WeatherAPI..ParamsSetUp))
	
	if Weather then
		local WeatherCode = Weather["current"].weather_code
		
		local CorrospondingWeatherType = WeatherCodes.WeatherCodes[WeatherCode].WeatherType
		local CorrospondingWeatherStrength = WeatherCodes.WeatherCodes[WeatherCode].Strength
		
		WeatherModule.Direct(CorrospondingWeatherType, CorrospondingWeatherStrength)
	else
		warn("Something went wrong getting the weather buddy")
	end

end

local function SetTime()
	task.wait(1)
	local Result = ApiRequest(TimeApi..Ip)
	
	if Result then
		local Time = HttpService:JSONDecode(Result)

		if Time then
			print("yea mate")
			local TotalTime = Time["hour"] * 60 + Time["minute"]
			LightingService:SetMinutesAfterMidnight(TotalTime)

			coroutine.resume(coroutine.create(function()
				while wait(60) do
					TotalTime = TotalTime + 1
					LightingService:SetMinutesAfterMidnight(TotalTime)
				end
			end))
		end
	else
		SetTime()
	end
end

local function GetServerIp()
	task.wait(1)
	local ServerIP = HttpService:JSONDecode(ApiRequest(ServerApi))

	if ServerIP then
		Params.latitude = ServerIP["latitude"]
		Params.longitude = ServerIP["longitude"]
		
		Ip = ServerIP["ip"]
		SetTime()
	else
		warn("So something went wrong getting the Ip of server buddy")
	end
end

GetServerIp()
CurrentWeather()

while wait(3600) do
	CurrentWeather() -- Weather Api Updates Hourly
end
