local WeatherAPI = "https://api.open-meteo.com/v1/forecast"
local Params = {
	latitude = nil,
	longitude = nil,
	hourly = "temperature_2m",
	current = {"precipitation", "rain", "showers", "snowfall", "weather_code", "cloud_cover"}
}

local ServerApi = "https://ipconfig.io/json"

local WeatherCodes = {
	[0] = { Name = "Clear sky", WeatherType = "Clear", Strength = "None" },

	[1] = { Name = "Mainly clear", WeatherType = "Cloudy", Strength = "Light" },
	[2] = { Name = "Partly cloudy", WeatherType = "Cloudy", Strength = "Moderate" },
	[3] = { Name = "Overcast", WeatherType = "Cloudy", Strength = "Heavy" },

	[45] = { Name = "Fog", WeatherType = "Fog", Strength = "Moderate" },
	[48] = { Name = "Depositing rime fog", WeatherType = "Fog", Strength = "Heavy" },

	[51] = { Name = "Drizzle", WeatherType = "Drizzle", Strength = "Light" },
	[53] = { Name = "Drizzle", WeatherType = "Drizzle", Strength = "Moderate" },
	[55] = { Name = "Drizzle", WeatherType = "Drizzle", Strength = "Heavy" },

	[56] = { Name = "Freezing Drizzle", WeatherType = "Freezing Drizzle", Strength = "Light" },
	[57] = { Name = "Freezing Drizzle", WeatherType = "Freezing Drizzle", Strength = "Heavy" },

	[61] = { Name = "Rain", WeatherType = "Rain", Strength = "Slight" },
	[63] = { Name = "Rain", WeatherType = "Rain", Strength = "Moderate" },
	[65] = { Name = "Rain", WeatherType = "Rain", Strength = "Heavy" },

	[66] = { Name = "Freezing Rain", WeatherType = "Freezing Rain", Strength = "Light" },
	[67] = { Name = "Freezing Rain", WeatherType = "Freezing Rain", Strength = "Heavy" },

	[71] = { Name = "Snowfall", WeatherType = "Snow", Strength = "Slight" },
	[73] = { Name = "Snowfall", WeatherType = "Snow", Strength = "Moderate" },
	[75] = { Name = "Snowfall", WeatherType = "Snow", Strength = "Heavy" },
	[77] = { Name = "Snow grains", WeatherType = "Snow", Strength = "None" },

	[80] = { Name = "Rain showers", WeatherType = "Rain Showers", Strength = "Slight" },
	[81] = { Name = "Rain showers", WeatherType = "Rain Showers", Strength = "Moderate" },
	[82] = { Name = "Rain showers", WeatherType = "Rain Showers", Strength = "Violent" },

	[85] = { Name = "Snow showers", WeatherType = "Snow Showers", Strength = "Slight" },
	[86] = { Name = "Snow showers", WeatherType = "Snow Showers", Strength = "Heavy" },

	[95] = { Name = "Thunderstorm", WeatherType = "Thunderstorm", Strength = "Slight or Moderate" },
	[96] = { Name = "Thunderstorm with hail", WeatherType = "Thunderstorm", Strength = "Slight" },
	[99] = { Name = "Thunderstorm with hail", WeatherType = "Thunderstorm", Strength = "Heavy" }
}

local ParamsSetUp = "?"

local HttpService = game:GetService("HttpService")
local LightingService = game:GetService("Lighting")
local PlayerService = game:GetService("Players")

local function CurrentWeather()
	print("Lets get that weather shall we")
	local Weather
	
	for key, value in pairs(Params) do
		if type(value) == "table" then
			value = table.concat(value, ",") -- Convert list to comma-separated string
		end
		ParamsSetUp = ParamsSetUp .. key .. "=" .. tostring(value) .. "&"
	end

	-- Remove last "&" from query
	ParamsSetUp = ParamsSetUp:sub(1, -2)
	
	local Success, Error = pcall(function()
		Weather = HttpService:GetAsync(WeatherAPI..ParamsSetUp)
	end)
	
	if Success then
		print("SUCCESS YEA")
		Weather = HttpService:JSONDecode(Weather)
		local WeatherCode = Weather["current"].weather_code
		
		local CorrospondingWeatherName = WeatherCodes[WeatherCode].Name
		local CorrospondingWeatherType = WeatherCodes[WeatherCode].WeatherType
		local CorrospondingWeatherStrength = WeatherCodes[WeatherCode].Strength
		
		warn("Weather is ", CorrospondingWeatherName, CorrospondingWeatherType, CorrospondingWeatherStrength)
		
		-- game:GetService("ReplicatedStorage").MyRealEvent:Fire(CorrospondingWeatherType, CorrospondingWeatherStrength)
		-- You can then call an event with the WeatherType and Strength (Im too lazy to do that)
	else
		warn(Error)
	end

end

local function SetTime()
	local Time = os.date("%H") * 60 + os.date("%M")

	LightingService:SetMinutesAfterMidnight(Time)

	CurrentWeather()
end

local function GetServerIp()
	print("bro update 2")
	local ServerIP
	
	local Sucess, Ip = pcall(function()
		return HttpService:GetAsync("https://ipconfig.io/json")
	end)

	if Ip then
		ServerIP = HttpService:JSONDecode(Ip)
		
		Params.latitude = ServerIP["latitude"]
		Params.longitude = ServerIP["longitude"]
		
		SetTime()
	end
end

PlayerService.PlayerAdded:Connect(GetServerIp)
